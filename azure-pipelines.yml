trigger:
- master

pool:
  name: aks-private   # Your self-hosted agent pool name

variables:
  IMAGE_NAME: myapp
  ACR_NAME: rahafacrprivate001
  RESOURCE_GROUP: aks-rg
  CLUSTER_NAME: aks-cluster
  ACR_LOGIN_SERVER: rahafacrprivate001.azurecr.io

steps:
- checkout: self

- task: AzureCLI@2
  inputs:
    azureSubscription: 'azure-rahaf-acr-aks'  # The service connection name
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "üîê Logging into ACR"
      az acr login --name $ACR_NAME

      echo "üê≥ Building Docker image"
      docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$(Build.BuildId) .

      echo "üì¶ Pushing image to ACR"
      docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$(Build.BuildId)

      echo "‚ò∏Ô∏è Connecting to AKS"
      az aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --overwrite-existing

      echo "üöÄ Deploying to AKS"
      kubectl create deployment $IMAGE_NAME --image=$ACR_LOGIN_SERVER/$IMAGE_NAME:$(Build.BuildId) --dry-run=client -o yaml | kubectl apply -f -
      kubectl expose deployment $IMAGE_NAME --type=LoadBalancer --port=80 --target-port=80 --dry-run=client -o yaml | kubectl apply -f -
